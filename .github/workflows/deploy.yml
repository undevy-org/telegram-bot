# Deploy Pipeline for Telegram Bot
# Location: .github/workflows/deploy.yml

name: Deploy Bot

on:
  # Trigger on push to main
  push:
    branches: [main]
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
      # Display deployment information
      - name: Setup deployment info
        run: |
          echo "üöÄ Starting bot deployment"
          echo "Commit: ${{ github.sha }}"
          echo "Triggered by: ${{ github.event_name }}"
      
      # Get the latest code from repository
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Deploy bot to server using SSH directly
      - name: Deploy bot to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            
            echo "üîß Setting up Node environment..."
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            # Define paths
            BOT_PATH="${{ secrets.DEPLOY_PATH_BOT }}"
            TEMP_BOT_PATH="$BOT_PATH-temp"
            
            echo "üìÅ Creating temporary directory for new deployment..."
            rm -rf "$TEMP_BOT_PATH"
            mkdir -p "$TEMP_BOT_PATH"
            
            echo "üì• Cloning repository..."
            git clone https://github.com/undevy-org/telegram-bot.git "$TEMP_BOT_PATH"
            
            # Remove .git directory to save space
            rm -rf "$TEMP_BOT_PATH/.git"
            
            # Check if bot directory exists and has .env file
            if [ -d "$BOT_PATH" ]; then
              echo "üìÅ Found existing bot installation"
              
              # Copy .env file from current installation if it exists
              if [ -f "$BOT_PATH/.env" ]; then
                echo "üíæ Copying .env file from current installation..."
                cp "$BOT_PATH/.env" "$TEMP_BOT_PATH/.env"
              else
                echo "‚ö†Ô∏è Warning: No .env file found in current installation"
              fi
              
              # Copy content-backups directory if it exists
              if [ -d "$BOT_PATH/content-backups" ]; then
                echo "üíæ Copying content-backups from current installation..."
                cp -r "$BOT_PATH/content-backups" "$TEMP_BOT_PATH/content-backups"
              fi
            else
              echo "üÜï First deployment - no existing installation found"
              echo "‚ö†Ô∏è WARNING: Make sure to create .env file after deployment!"
            fi
            
            # Install dependencies in the new directory
            echo "üì¶ Installing production dependencies..."
            cd "$TEMP_BOT_PATH"
            npm ci --omit=dev || npm install --production
            
            # Now swap the directories
            echo "üîÑ Swapping bot directories..."
            
            # If old bot exists, move it to backup (keep only one backup)
            if [ -d "$BOT_PATH" ]; then
              # Remove previous backup if it exists
              if [ -d "$BOT_PATH-old" ]; then
                echo "üóëÔ∏è Removing previous backup..."
                rm -rf "$BOT_PATH-old"
              fi
              
              # Move current to backup
              echo "üíæ Moving current installation to backup..."
              mv "$BOT_PATH" "$BOT_PATH-old"
            fi
            
            # Move new deployment to production
            echo "üìÅ Moving new deployment to production..."
            mv "$TEMP_BOT_PATH" "$BOT_PATH"
            
            # Verify .env file exists
            if [ ! -f "$BOT_PATH/.env" ]; then
              echo "‚ùó‚ùó‚ùó WARNING: .env file is missing!"
              echo "The bot will not start without proper environment variables."
              echo "Please create $BOT_PATH/.env with the following variables:"
              echo "  TELEGRAM_BOT_TOKEN"
              echo "  API_URL"
              echo "  API_TOKEN"
              echo "  ADMIN_USER_ID"
              echo "  BACKUP_DIR"
              echo "  MATOMO_URL"
              echo "  MATOMO_TOKEN"
              echo "  PORTFOLIO_NAME"
              
              # Try to restore from backup if available
              if [ -f "$BOT_PATH-old/.env" ]; then
                echo "üîÑ Attempting to restore .env from backup..."
                cp "$BOT_PATH-old/.env" "$BOT_PATH/.env"
                echo "‚úÖ .env restored from backup"
              fi
            else
              echo "‚úÖ .env file is present"
            fi
            
            # Restart bot via PM2
            echo "üîÑ Restarting bot via PM2..."
            cd "$BOT_PATH"
            APP="${{ secrets.PM2_APP_NAME_BOT }}"
            
            # Check if bot process exists
            if pm2 describe "$APP" >/dev/null 2>&1; then
              pm2 restart "$APP" --update-env
              echo "‚úÖ Bot restarted: $APP"
            else
              # Start bot if not running
              if [ -f ".env" ]; then
                pm2 start bot.js --name "$APP"
                echo "‚úÖ Bot started: $APP"
              else
                echo "‚ö†Ô∏è Cannot start bot - .env file is missing!"
                echo "Please create .env file and start manually:"
                echo "  cd $BOT_PATH"
                echo "  pm2 start bot.js --name $APP"
              fi
            fi
            
            # Save PM2 configuration
            pm2 save || true
            
            # Show bot status
            echo "üìä Bot status:"
            pm2 list | grep "$APP" || echo "Bot is not running"
            
            # Final verification
            echo ""
            echo "üìÅ Current structure:"
            echo "  Production: $BOT_PATH"
            ls -la "$BOT_PATH/.env" 2>/dev/null || echo "  ‚ö†Ô∏è .env is missing!"
            
            if [ -d "$BOT_PATH-old" ]; then
              echo "  Backup: $BOT_PATH-old"
            fi
            
            echo ""
            echo "‚úÖ Deployment completed!"
      
      # Final success notification
      - name: Deployment summary
        run: |
          echo "üéâ BOT DEPLOYMENT COMPLETED!"
          echo "================================"
          echo "Commit: ${{ github.sha }}"
          echo ""
          echo "Important notes:"
          echo "- The bot keeps only ONE previous version as backup"
          echo "- The .env file is preserved from the current installation"
          echo "- If this is the first deployment, create .env manually on server"
          echo ""
          echo "To check bot status:"
          echo "  ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"
          echo "  pm2 logs ${{ secrets.PM2_APP_NAME_BOT }}"